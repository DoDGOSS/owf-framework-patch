<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <!-- Enable annotation-driven security -->
    <sec:global-method-security jsr250-annotations="enabled"
                                pre-post-annotations="enabled"
                                proxy-target-class="true"/>

    <!-- The example DetailService implementation which reads from the preset user.properties file -->
    <bean id="userService" class="ozone.securitysample.authentication.basic.MyDetailsService">
        <property name="propertyFileName" value="/ozone/framework/users.properties"/>
    </bean>

    <!-- Grails authentication cache -->
    <bean id="grailsUserCache"
          factory-bean="grailsCacheManager"
          factory-method="getCache">
        <constructor-arg index="0" type="java.lang.String" value="userCache"/>
    </bean>

    <!-- Spring authentication cache -->
    <bean id="springUserCache" class="org.springframework.security.core.userdetails.cache.SpringCacheBasedUserCache">
        <constructor-arg index="0" type="org.springframework.cache.Cache" ref="grailsUserCache"/>
    </bean>

    <!-- Authentication provider for form login (username & password) authentication -->
    <bean id="basicAuthenticationAuthProvider"
          class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="userService"/>
        <property name="userCache" ref="springUserCache"/>
    </bean>

    <!-- Authentication manager must be defined using 'id' and not 'ref' -->
    <sec:authentication-manager id="authenticationManager">
        <sec:authentication-provider ref="basicAuthenticationAuthProvider"/>
    </sec:authentication-manager>

    <!-- Custom Ozone cookie filter -->
    <bean id="ozoneCookieFilter" class="ozone.security.filters.OzoneCookieFilter"/>

    <sec:http realm="OZONE">

        <sec:port-mappings>
            <sec:port-mapping http="8080" https="8443"/>
        </sec:port-mappings>

        <!-- CSRF protection must be disabled (enabled by default) to allow POST (& PATCH, PUT, DELETE) requests,
                as the client does not currently support CSRF tokens. -->
        <sec:csrf disabled="true"/>

        <!-- Set the 'X-Frame-Options' header (defaults to DENY) to allow widgets to run in iframes -->
        <sec:headers>
            <sec:frame-options policy="SAMEORIGIN"/>
        </sec:headers>

        <sec:custom-filter ref="ozoneCookieFilter" before="ANONYMOUS_FILTER"/>

        <sec:intercept-url pattern="/static/**"
                           access="permitAll()" />

        <sec:intercept-url pattern="/login*"
                           access="permitAll()"
                           requires-channel="https" />

        <sec:intercept-url pattern="/perform_login*"
                           access="permitAll()"
                           requires-channel="https" />

        <sec:intercept-url pattern="/**"
                           access="hasAnyRole('ADMIN', 'USER', 'ORG_STEWARD')"
                           requires-channel="https" />

        <sec:form-login login-page="/login"
                        login-processing-url="/perform_login"
                        default-target-url="/"
                        always-use-default-target="true"
                        username-parameter="username"
                        password-parameter="password" />

        <sec:logout logout-url="/logout"
                    logout-success-url="/login?out=1"
                    delete-cookies="JSESSIONID"
                    invalidate-session="true" />

        <sec:session-management invalid-session-url="/login?invalid=1">
            <sec:concurrency-control max-sessions="1" expired-url="/login?time=1" />
        </sec:session-management>

    </sec:http>

    <!-- A primary instance must be specified due to a duplicate bean registration -->
    <bean id="authenticationEventPublisher"
          primary="true"
          class="org.springframework.security.authentication.DefaultAuthenticationEventPublisher"/>

</beans>
